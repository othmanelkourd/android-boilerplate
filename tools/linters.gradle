def lintersDir = "$rootDir/tools/linters"
def reportsDir = "$rootDir/reports"

afterEvaluate { project ->
	apply plugin: 'pmd'
	apply plugin: "com.github.spotbugs"
	apply plugin: "io.gitlab.arturbosch.detekt"
	apply from: rootProject.file('tools/exclusions.gradle')

	spotbugs {
		toolVersion = '3.1.1'
	}

	detekt {
		version = "1.0.0.RC6-2"
		profile("main") {
			input = "$projectDir/your/app"
			config = "$projectDir/detekt.yml"
			filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
		}
	}

	pmd {
		toolVersion = "5.8.1"
	}

	task pmd(type: Pmd) {
		group "QA"
		ruleSetFiles = files("$lintersDir/pmd-ruleset.xml")
		ruleSets = []

		source 'src/main/java'
		include '**/*.java'
		exclude '**/gen/**'

		reports {
			xml.enabled = false
			html.enabled = true
			html.setDestination(file("$reportsDir/pmd/index.html"))
		}
	}

	if (project.findProperty('android')) {
		apply plugin: 'checkstyle'

		checkstyle {
			toolVersion "8.4"
		}

		task checkstyle(type: Checkstyle) {
			group "Linters"
			configFile file("$lintersDir/checkstyle.xml")
			showViolations true

			source "src/main/java"
			classpath = files()
		}
	}

	def task = tasks.findByName("check")

	if (task != null) {
		if (project.findProperty('android')) {
			task.dependsOn("pmd", "checkstyle")
		} else {
			task.dependsOn("pmd")
		}
	}
}
