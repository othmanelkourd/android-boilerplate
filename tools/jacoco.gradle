apply plugin: 'jacoco'

task fullCoverageReport(type: JacocoReport) {
	dependsOn 'createDebugCoverageReport'
	dependsOn 'testDebugUnitTest'
	reports {
		xml.enabled = true
		html.enabled = true
	}

	def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
					  '**/*Test*.*', 'android/**/*.*',
					  '**/*_MembersInjector.class',
					  '**/Dagger*Component.class',
					  '**/Dagger*Component$Builder.class',
					  '**/*_*Factory.class',
					  '**/*ComponentImpl.class',
					  '**/*SubComponentBuilder.class']
	def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
	def mainSrc = "${project.projectDir}/src/main/java"

	sourceDirectories = files([mainSrc])
	classDirectories = files([debugTree])
	executionData = fileTree(dir: "$buildDir", includes: [
		"jacoco/testDebugUnitTest.exec",
		"outputs/code-coverage/connected/*coverage.ec"
	])
}
